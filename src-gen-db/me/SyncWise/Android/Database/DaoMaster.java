package me.SyncWise.Android.Database;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.IdentityScopeType;

import me.SyncWise.Android.Database.BanksDao;
import me.SyncWise.Android.Database.AreasDao;
import me.SyncWise.Android.Database.UsersDao;
import me.SyncWise.Android.Database.ConnectionSettingsDao;
import me.SyncWise.Android.Database.AreaLevelsDao;
import me.SyncWise.Android.Database.CompaniesDao;
import me.SyncWise.Android.Database.PermissionsDao;
import me.SyncWise.Android.Database.NewClientsDao;
import me.SyncWise.Android.Database.NewClientImagesDao;
import me.SyncWise.Android.Database.ClientsDao;
import me.SyncWise.Android.Database.UserPasswordsDao;
import me.SyncWise.Android.Database.MsgHeaderDao;
import me.SyncWise.Android.Database.UserPermissionsDao;
import me.SyncWise.Android.Database.UserAccountNumbersDao;
import me.SyncWise.Android.Database.PrintersDao;
import me.SyncWise.Android.Database.UserLimitsDao;
import me.SyncWise.Android.Database.MsgNoteDao;
import me.SyncWise.Android.Database.ItemsDao;
import me.SyncWise.Android.Database.CyclesDao;
import me.SyncWise.Android.Database.TaxesDao;
import me.SyncWise.Android.Database.UnitsDao;
import me.SyncWise.Android.Database.PricesDao;
import me.SyncWise.Android.Database.ClientBarcodesDao;
import me.SyncWise.Android.Database.DivisionsDao;
import me.SyncWise.Android.Database.UserDivisionsDao;
import me.SyncWise.Android.Database.ItemDivisionsDao;
import me.SyncWise.Android.Database.ItemVolumesDao;
import me.SyncWise.Android.Database.ClientAreasDao;
import me.SyncWise.Android.Database.ClientItemCodesDao;
import me.SyncWise.Android.Database.ClientContactsDao;
import me.SyncWise.Android.Database.ClientPropertyValuesDao;
import me.SyncWise.Android.Database.UserCyclesDao;
import me.SyncWise.Android.Database.ItemBarcodesDao;
import me.SyncWise.Android.Database.ClientPropertiesDao;
import me.SyncWise.Android.Database.ClientPriceListsDao;
import me.SyncWise.Android.Database.PriceListsDao;
import me.SyncWise.Android.Database.ObjectiveAssignmentsDao;
import me.SyncWise.Android.Database.CycleCallsDao;
import me.SyncWise.Android.Database.ClientCurrenciesDao;
import me.SyncWise.Android.Database.ClientPropertyLevelsDao;
import me.SyncWise.Android.Database.ClientItemHistoryDao;
import me.SyncWise.Android.Database.AssetsStatusDao;
import me.SyncWise.Android.Database.ClientDivisionsDao;
import me.SyncWise.Android.Database.ClientAvailabilitiesDao;
import me.SyncWise.Android.Database.ClientMustStockListDao;
import me.SyncWise.Android.Database.CurrenciesDao;
import me.SyncWise.Android.Database.CompetitorItemsDao;
import me.SyncWise.Android.Database.PaymentTermsDao;
import me.SyncWise.Android.Database.BlankVisitsDao;
import me.SyncWise.Android.Database.JourneysDao;
import me.SyncWise.Android.Database.BlankVisitContactsDao;
import me.SyncWise.Android.Database.VisitHistoryDao;
import me.SyncWise.Android.Database.VisitReasonsDao;
import me.SyncWise.Android.Database.ReasonsDao;
import me.SyncWise.Android.Database.VisitTypesDao;
import me.SyncWise.Android.Database.TransactionHeadersDao;
import me.SyncWise.Android.Database.ClientDocumentImagesDao;
import me.SyncWise.Android.Database.ClientStockCountDetailsDao;
import me.SyncWise.Android.Database.ClientItemClassificationHistoryDao;
import me.SyncWise.Android.Database.WareHouseBarcodeScanningDao;
import me.SyncWise.Android.Database.ClientSellingSuggestionDao;
import me.SyncWise.Android.Database.TransactionPromotionDetailsDao;
import me.SyncWise.Android.Database.TransactionDetailsMissedMSLDao;
import me.SyncWise.Android.Database.ClientStockCountHeadersDao;
import me.SyncWise.Android.Database.DailyTargetAchievementsDao;
import me.SyncWise.Android.Database.ClientItemClassificationLevelsDao;
import me.SyncWise.Android.Database.ClientItemClassificationsDao;
import me.SyncWise.Android.Database.VisitsDao;
import me.SyncWise.Android.Database.SuggestedUserLoadDao;
import me.SyncWise.Android.Database.PromotionHeadersDao;
import me.SyncWise.Android.Database.SurveyAssignmentsDao;
import me.SyncWise.Android.Database.SurveyQuestionsDao;
import me.SyncWise.Android.Database.SubQuestionAnswersDao;
import me.SyncWise.Android.Database.MovementDetailsDao;
import me.SyncWise.Android.Database.PromotionAssignmentsDao;
import me.SyncWise.Android.Database.VehiclesDao;
import me.SyncWise.Android.Database.DeviceTrackingDao;
import me.SyncWise.Android.Database.VehiclesStockDao;
import me.SyncWise.Android.Database.WareHouseBarcodesDao;
import me.SyncWise.Android.Database.TransactionSequencesDao;
import me.SyncWise.Android.Database.SurveyAnswersDao;
import me.SyncWise.Android.Database.PromotionDetailsDao;
import me.SyncWise.Android.Database.QuestionAnswersDao;
import me.SyncWise.Android.Database.MovementHeadersDao;
import me.SyncWise.Android.Database.SurveyImagesDao;
import me.SyncWise.Android.Database.DeviceSerialsDao;
import me.SyncWise.Android.Database.SurveysDao;
import me.SyncWise.Android.Database.TransactionDetailsDao;
import me.SyncWise.Android.Database.ClientUserCollectionDao;
import me.SyncWise.Android.Database.CollectionInvoicesDao;
import me.SyncWise.Android.Database.TotalClientDuesDao;
import me.SyncWise.Android.Database.WarehouseQuantitiesDao;
import me.SyncWise.Android.Database.MoneyCategoryDao;
import me.SyncWise.Android.Database.CollectionDetailsDao;
import me.SyncWise.Android.Database.CollectionImagesDao;
import me.SyncWise.Android.Database.ClientDuesDao;
import me.SyncWise.Android.Database.CollectionHeadersDao;
import me.SyncWise.Android.Database.BrandsDao;
import me.SyncWise.Android.Database.ClientAssetsPicturesDao;
import me.SyncWise.Android.Database.ShareOfShelfTrackerDao;
import me.SyncWise.Android.Database.SOSTrackerHeadersDao;
import me.SyncWise.Android.Database.UserVersionsDao;
import me.SyncWise.Android.Database.UserSpecialPriceListsDao;
import me.SyncWise.Android.Database.ForceSyncJourneysDao;
import me.SyncWise.Android.Database.NewSkuListDivisionsDao;
import me.SyncWise.Android.Database.SOSTargetAssignmentDao;
import me.SyncWise.Android.Database.ClientMouvementStockDao;
import me.SyncWise.Android.Database.SOSTrackerDetailsDao;
import me.SyncWise.Android.Database.SOSTargetHeadersDao;
import me.SyncWise.Android.Database.DuoUsersDao;
import me.SyncWise.Android.Database.ClientNewSkuListDao;
import me.SyncWise.Android.Database.ObjectivesDao;
import me.SyncWise.Android.Database.SOSBrandsDao;
import me.SyncWise.Android.Database.SOSCategoryBrandsDao;
import me.SyncWise.Android.Database.MSLDivisionsDao;
import me.SyncWise.Android.Database.ShareOfShelvesDao;
import me.SyncWise.Android.Database.SOSCategoriesDao;
import me.SyncWise.Android.Database.SOSTargetDetailsDao;
import me.SyncWise.Android.Database.ClientAssetStatusDao;
import me.SyncWise.Android.Database.ClientCreditingsDao;
import me.SyncWise.Android.Database.TargetAssignmentsDao;
import me.SyncWise.Android.Database.ObjectivePrioritiesDao;
import me.SyncWise.Android.Database.TargetHeadersDao;
import me.SyncWise.Android.Database.TargetDetailsDao;
import me.SyncWise.Android.Database.ObjectiveAchievementsDao;
import me.SyncWise.Android.Database.TargetAchievementsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        BanksDao.createTable(db, ifNotExists);
        AreasDao.createTable(db, ifNotExists);
        UsersDao.createTable(db, ifNotExists);
        ConnectionSettingsDao.createTable(db, ifNotExists);
        AreaLevelsDao.createTable(db, ifNotExists);
        CompaniesDao.createTable(db, ifNotExists);
        PermissionsDao.createTable(db, ifNotExists);
        NewClientsDao.createTable(db, ifNotExists);
        NewClientImagesDao.createTable(db, ifNotExists);
        ClientsDao.createTable(db, ifNotExists);
        UserPasswordsDao.createTable(db, ifNotExists);
        MsgHeaderDao.createTable(db, ifNotExists);
        UserPermissionsDao.createTable(db, ifNotExists);
        UserAccountNumbersDao.createTable(db, ifNotExists);
        PrintersDao.createTable(db, ifNotExists);
        UserLimitsDao.createTable(db, ifNotExists);
        MsgNoteDao.createTable(db, ifNotExists);
        ItemsDao.createTable(db, ifNotExists);
        CyclesDao.createTable(db, ifNotExists);
        TaxesDao.createTable(db, ifNotExists);
        UnitsDao.createTable(db, ifNotExists);
        PricesDao.createTable(db, ifNotExists);
        ClientBarcodesDao.createTable(db, ifNotExists);
        DivisionsDao.createTable(db, ifNotExists);
        UserDivisionsDao.createTable(db, ifNotExists);
        ItemDivisionsDao.createTable(db, ifNotExists);
        ItemVolumesDao.createTable(db, ifNotExists);
        ClientAreasDao.createTable(db, ifNotExists);
        ClientItemCodesDao.createTable(db, ifNotExists);
        ClientContactsDao.createTable(db, ifNotExists);
        ClientPropertyValuesDao.createTable(db, ifNotExists);
        UserCyclesDao.createTable(db, ifNotExists);
        ItemBarcodesDao.createTable(db, ifNotExists);
        ClientPropertiesDao.createTable(db, ifNotExists);
        ClientPriceListsDao.createTable(db, ifNotExists);
        PriceListsDao.createTable(db, ifNotExists);
        ObjectiveAssignmentsDao.createTable(db, ifNotExists);
        CycleCallsDao.createTable(db, ifNotExists);
        ClientCurrenciesDao.createTable(db, ifNotExists);
        ClientPropertyLevelsDao.createTable(db, ifNotExists);
        ClientItemHistoryDao.createTable(db, ifNotExists);
        AssetsStatusDao.createTable(db, ifNotExists);
        ClientDivisionsDao.createTable(db, ifNotExists);
        ClientAvailabilitiesDao.createTable(db, ifNotExists);
        ClientMustStockListDao.createTable(db, ifNotExists);
        CurrenciesDao.createTable(db, ifNotExists);
        CompetitorItemsDao.createTable(db, ifNotExists);
        PaymentTermsDao.createTable(db, ifNotExists);
        BlankVisitsDao.createTable(db, ifNotExists);
        JourneysDao.createTable(db, ifNotExists);
        BlankVisitContactsDao.createTable(db, ifNotExists);
        VisitHistoryDao.createTable(db, ifNotExists);
        VisitReasonsDao.createTable(db, ifNotExists);
        ReasonsDao.createTable(db, ifNotExists);
        VisitTypesDao.createTable(db, ifNotExists);
        TransactionHeadersDao.createTable(db, ifNotExists);
        ClientDocumentImagesDao.createTable(db, ifNotExists);
        ClientStockCountDetailsDao.createTable(db, ifNotExists);
        ClientItemClassificationHistoryDao.createTable(db, ifNotExists);
        WareHouseBarcodeScanningDao.createTable(db, ifNotExists);
        ClientSellingSuggestionDao.createTable(db, ifNotExists);
        TransactionPromotionDetailsDao.createTable(db, ifNotExists);
        TransactionDetailsMissedMSLDao.createTable(db, ifNotExists);
        ClientStockCountHeadersDao.createTable(db, ifNotExists);
        DailyTargetAchievementsDao.createTable(db, ifNotExists);
        ClientItemClassificationLevelsDao.createTable(db, ifNotExists);
        ClientItemClassificationsDao.createTable(db, ifNotExists);
        VisitsDao.createTable(db, ifNotExists);
        SuggestedUserLoadDao.createTable(db, ifNotExists);
        PromotionHeadersDao.createTable(db, ifNotExists);
        SurveyAssignmentsDao.createTable(db, ifNotExists);
        SurveyQuestionsDao.createTable(db, ifNotExists);
        SubQuestionAnswersDao.createTable(db, ifNotExists);
        MovementDetailsDao.createTable(db, ifNotExists);
        PromotionAssignmentsDao.createTable(db, ifNotExists);
        VehiclesDao.createTable(db, ifNotExists);
        DeviceTrackingDao.createTable(db, ifNotExists);
        VehiclesStockDao.createTable(db, ifNotExists);
        WareHouseBarcodesDao.createTable(db, ifNotExists);
        TransactionSequencesDao.createTable(db, ifNotExists);
        SurveyAnswersDao.createTable(db, ifNotExists);
        PromotionDetailsDao.createTable(db, ifNotExists);
        QuestionAnswersDao.createTable(db, ifNotExists);
        MovementHeadersDao.createTable(db, ifNotExists);
        SurveyImagesDao.createTable(db, ifNotExists);
        DeviceSerialsDao.createTable(db, ifNotExists);
        SurveysDao.createTable(db, ifNotExists);
        TransactionDetailsDao.createTable(db, ifNotExists);
        ClientUserCollectionDao.createTable(db, ifNotExists);
        CollectionInvoicesDao.createTable(db, ifNotExists);
        TotalClientDuesDao.createTable(db, ifNotExists);
        WarehouseQuantitiesDao.createTable(db, ifNotExists);
        MoneyCategoryDao.createTable(db, ifNotExists);
        CollectionDetailsDao.createTable(db, ifNotExists);
        CollectionImagesDao.createTable(db, ifNotExists);
        ClientDuesDao.createTable(db, ifNotExists);
        CollectionHeadersDao.createTable(db, ifNotExists);
        BrandsDao.createTable(db, ifNotExists);
        ClientAssetsPicturesDao.createTable(db, ifNotExists);
        ShareOfShelfTrackerDao.createTable(db, ifNotExists);
        SOSTrackerHeadersDao.createTable(db, ifNotExists);
        UserVersionsDao.createTable(db, ifNotExists);
        UserSpecialPriceListsDao.createTable(db, ifNotExists);
        ForceSyncJourneysDao.createTable(db, ifNotExists);
        NewSkuListDivisionsDao.createTable(db, ifNotExists);
        SOSTargetAssignmentDao.createTable(db, ifNotExists);
        ClientMouvementStockDao.createTable(db, ifNotExists);
        SOSTrackerDetailsDao.createTable(db, ifNotExists);
        SOSTargetHeadersDao.createTable(db, ifNotExists);
        DuoUsersDao.createTable(db, ifNotExists);
        ClientNewSkuListDao.createTable(db, ifNotExists);
        ObjectivesDao.createTable(db, ifNotExists);
        SOSBrandsDao.createTable(db, ifNotExists);
        SOSCategoryBrandsDao.createTable(db, ifNotExists);
        MSLDivisionsDao.createTable(db, ifNotExists);
        ShareOfShelvesDao.createTable(db, ifNotExists);
        SOSCategoriesDao.createTable(db, ifNotExists);
        SOSTargetDetailsDao.createTable(db, ifNotExists);
        ClientAssetStatusDao.createTable(db, ifNotExists);
        ClientCreditingsDao.createTable(db, ifNotExists);
        TargetAssignmentsDao.createTable(db, ifNotExists);
        ObjectivePrioritiesDao.createTable(db, ifNotExists);
        TargetHeadersDao.createTable(db, ifNotExists);
        TargetDetailsDao.createTable(db, ifNotExists);
        ObjectiveAchievementsDao.createTable(db, ifNotExists);
        TargetAchievementsDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        BanksDao.dropTable(db, ifExists);
        AreasDao.dropTable(db, ifExists);
        UsersDao.dropTable(db, ifExists);
        ConnectionSettingsDao.dropTable(db, ifExists);
        AreaLevelsDao.dropTable(db, ifExists);
        CompaniesDao.dropTable(db, ifExists);
        PermissionsDao.dropTable(db, ifExists);
        NewClientsDao.dropTable(db, ifExists);
        NewClientImagesDao.dropTable(db, ifExists);
        ClientsDao.dropTable(db, ifExists);
        UserPasswordsDao.dropTable(db, ifExists);
        MsgHeaderDao.dropTable(db, ifExists);
        UserPermissionsDao.dropTable(db, ifExists);
        UserAccountNumbersDao.dropTable(db, ifExists);
        PrintersDao.dropTable(db, ifExists);
        UserLimitsDao.dropTable(db, ifExists);
        MsgNoteDao.dropTable(db, ifExists);
        ItemsDao.dropTable(db, ifExists);
        CyclesDao.dropTable(db, ifExists);
        TaxesDao.dropTable(db, ifExists);
        UnitsDao.dropTable(db, ifExists);
        PricesDao.dropTable(db, ifExists);
        ClientBarcodesDao.dropTable(db, ifExists);
        DivisionsDao.dropTable(db, ifExists);
        UserDivisionsDao.dropTable(db, ifExists);
        ItemDivisionsDao.dropTable(db, ifExists);
        ItemVolumesDao.dropTable(db, ifExists);
        ClientAreasDao.dropTable(db, ifExists);
        ClientItemCodesDao.dropTable(db, ifExists);
        ClientContactsDao.dropTable(db, ifExists);
        ClientPropertyValuesDao.dropTable(db, ifExists);
        UserCyclesDao.dropTable(db, ifExists);
        ItemBarcodesDao.dropTable(db, ifExists);
        ClientPropertiesDao.dropTable(db, ifExists);
        ClientPriceListsDao.dropTable(db, ifExists);
        PriceListsDao.dropTable(db, ifExists);
        ObjectiveAssignmentsDao.dropTable(db, ifExists);
        CycleCallsDao.dropTable(db, ifExists);
        ClientCurrenciesDao.dropTable(db, ifExists);
        ClientPropertyLevelsDao.dropTable(db, ifExists);
        ClientItemHistoryDao.dropTable(db, ifExists);
        AssetsStatusDao.dropTable(db, ifExists);
        ClientDivisionsDao.dropTable(db, ifExists);
        ClientAvailabilitiesDao.dropTable(db, ifExists);
        ClientMustStockListDao.dropTable(db, ifExists);
        CurrenciesDao.dropTable(db, ifExists);
        CompetitorItemsDao.dropTable(db, ifExists);
        PaymentTermsDao.dropTable(db, ifExists);
        BlankVisitsDao.dropTable(db, ifExists);
        JourneysDao.dropTable(db, ifExists);
        BlankVisitContactsDao.dropTable(db, ifExists);
        VisitHistoryDao.dropTable(db, ifExists);
        VisitReasonsDao.dropTable(db, ifExists);
        ReasonsDao.dropTable(db, ifExists);
        VisitTypesDao.dropTable(db, ifExists);
        TransactionHeadersDao.dropTable(db, ifExists);
        ClientDocumentImagesDao.dropTable(db, ifExists);
        ClientStockCountDetailsDao.dropTable(db, ifExists);
        ClientItemClassificationHistoryDao.dropTable(db, ifExists);
        WareHouseBarcodeScanningDao.dropTable(db, ifExists);
        ClientSellingSuggestionDao.dropTable(db, ifExists);
        TransactionPromotionDetailsDao.dropTable(db, ifExists);
        TransactionDetailsMissedMSLDao.dropTable(db, ifExists);
        ClientStockCountHeadersDao.dropTable(db, ifExists);
        DailyTargetAchievementsDao.dropTable(db, ifExists);
        ClientItemClassificationLevelsDao.dropTable(db, ifExists);
        ClientItemClassificationsDao.dropTable(db, ifExists);
        VisitsDao.dropTable(db, ifExists);
        SuggestedUserLoadDao.dropTable(db, ifExists);
        PromotionHeadersDao.dropTable(db, ifExists);
        SurveyAssignmentsDao.dropTable(db, ifExists);
        SurveyQuestionsDao.dropTable(db, ifExists);
        SubQuestionAnswersDao.dropTable(db, ifExists);
        MovementDetailsDao.dropTable(db, ifExists);
        PromotionAssignmentsDao.dropTable(db, ifExists);
        VehiclesDao.dropTable(db, ifExists);
        DeviceTrackingDao.dropTable(db, ifExists);
        VehiclesStockDao.dropTable(db, ifExists);
        WareHouseBarcodesDao.dropTable(db, ifExists);
        TransactionSequencesDao.dropTable(db, ifExists);
        SurveyAnswersDao.dropTable(db, ifExists);
        PromotionDetailsDao.dropTable(db, ifExists);
        QuestionAnswersDao.dropTable(db, ifExists);
        MovementHeadersDao.dropTable(db, ifExists);
        SurveyImagesDao.dropTable(db, ifExists);
        DeviceSerialsDao.dropTable(db, ifExists);
        SurveysDao.dropTable(db, ifExists);
        TransactionDetailsDao.dropTable(db, ifExists);
        ClientUserCollectionDao.dropTable(db, ifExists);
        CollectionInvoicesDao.dropTable(db, ifExists);
        TotalClientDuesDao.dropTable(db, ifExists);
        WarehouseQuantitiesDao.dropTable(db, ifExists);
        MoneyCategoryDao.dropTable(db, ifExists);
        CollectionDetailsDao.dropTable(db, ifExists);
        CollectionImagesDao.dropTable(db, ifExists);
        ClientDuesDao.dropTable(db, ifExists);
        CollectionHeadersDao.dropTable(db, ifExists);
        BrandsDao.dropTable(db, ifExists);
        ClientAssetsPicturesDao.dropTable(db, ifExists);
        ShareOfShelfTrackerDao.dropTable(db, ifExists);
        SOSTrackerHeadersDao.dropTable(db, ifExists);
        UserVersionsDao.dropTable(db, ifExists);
        UserSpecialPriceListsDao.dropTable(db, ifExists);
        ForceSyncJourneysDao.dropTable(db, ifExists);
        NewSkuListDivisionsDao.dropTable(db, ifExists);
        SOSTargetAssignmentDao.dropTable(db, ifExists);
        ClientMouvementStockDao.dropTable(db, ifExists);
        SOSTrackerDetailsDao.dropTable(db, ifExists);
        SOSTargetHeadersDao.dropTable(db, ifExists);
        DuoUsersDao.dropTable(db, ifExists);
        ClientNewSkuListDao.dropTable(db, ifExists);
        ObjectivesDao.dropTable(db, ifExists);
        SOSBrandsDao.dropTable(db, ifExists);
        SOSCategoryBrandsDao.dropTable(db, ifExists);
        MSLDivisionsDao.dropTable(db, ifExists);
        ShareOfShelvesDao.dropTable(db, ifExists);
        SOSCategoriesDao.dropTable(db, ifExists);
        SOSTargetDetailsDao.dropTable(db, ifExists);
        ClientAssetStatusDao.dropTable(db, ifExists);
        ClientCreditingsDao.dropTable(db, ifExists);
        TargetAssignmentsDao.dropTable(db, ifExists);
        ObjectivePrioritiesDao.dropTable(db, ifExists);
        TargetHeadersDao.dropTable(db, ifExists);
        TargetDetailsDao.dropTable(db, ifExists);
        ObjectiveAchievementsDao.dropTable(db, ifExists);
        TargetAchievementsDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(BanksDao.class);
        registerDaoClass(AreasDao.class);
        registerDaoClass(UsersDao.class);
        registerDaoClass(ConnectionSettingsDao.class);
        registerDaoClass(AreaLevelsDao.class);
        registerDaoClass(CompaniesDao.class);
        registerDaoClass(PermissionsDao.class);
        registerDaoClass(NewClientsDao.class);
        registerDaoClass(NewClientImagesDao.class);
        registerDaoClass(ClientsDao.class);
        registerDaoClass(UserPasswordsDao.class);
        registerDaoClass(MsgHeaderDao.class);
        registerDaoClass(UserPermissionsDao.class);
        registerDaoClass(UserAccountNumbersDao.class);
        registerDaoClass(PrintersDao.class);
        registerDaoClass(UserLimitsDao.class);
        registerDaoClass(MsgNoteDao.class);
        registerDaoClass(ItemsDao.class);
        registerDaoClass(CyclesDao.class);
        registerDaoClass(TaxesDao.class);
        registerDaoClass(UnitsDao.class);
        registerDaoClass(PricesDao.class);
        registerDaoClass(ClientBarcodesDao.class);
        registerDaoClass(DivisionsDao.class);
        registerDaoClass(UserDivisionsDao.class);
        registerDaoClass(ItemDivisionsDao.class);
        registerDaoClass(ItemVolumesDao.class);
        registerDaoClass(ClientAreasDao.class);
        registerDaoClass(ClientItemCodesDao.class);
        registerDaoClass(ClientContactsDao.class);
        registerDaoClass(ClientPropertyValuesDao.class);
        registerDaoClass(UserCyclesDao.class);
        registerDaoClass(ItemBarcodesDao.class);
        registerDaoClass(ClientPropertiesDao.class);
        registerDaoClass(ClientPriceListsDao.class);
        registerDaoClass(PriceListsDao.class);
        registerDaoClass(ObjectiveAssignmentsDao.class);
        registerDaoClass(CycleCallsDao.class);
        registerDaoClass(ClientCurrenciesDao.class);
        registerDaoClass(ClientPropertyLevelsDao.class);
        registerDaoClass(ClientItemHistoryDao.class);
        registerDaoClass(AssetsStatusDao.class);
        registerDaoClass(ClientDivisionsDao.class);
        registerDaoClass(ClientAvailabilitiesDao.class);
        registerDaoClass(ClientMustStockListDao.class);
        registerDaoClass(CurrenciesDao.class);
        registerDaoClass(CompetitorItemsDao.class);
        registerDaoClass(PaymentTermsDao.class);
        registerDaoClass(BlankVisitsDao.class);
        registerDaoClass(JourneysDao.class);
        registerDaoClass(BlankVisitContactsDao.class);
        registerDaoClass(VisitHistoryDao.class);
        registerDaoClass(VisitReasonsDao.class);
        registerDaoClass(ReasonsDao.class);
        registerDaoClass(VisitTypesDao.class);
        registerDaoClass(TransactionHeadersDao.class);
        registerDaoClass(ClientDocumentImagesDao.class);
        registerDaoClass(ClientStockCountDetailsDao.class);
        registerDaoClass(ClientItemClassificationHistoryDao.class);
        registerDaoClass(WareHouseBarcodeScanningDao.class);
        registerDaoClass(ClientSellingSuggestionDao.class);
        registerDaoClass(TransactionPromotionDetailsDao.class);
        registerDaoClass(TransactionDetailsMissedMSLDao.class);
        registerDaoClass(ClientStockCountHeadersDao.class);
        registerDaoClass(DailyTargetAchievementsDao.class);
        registerDaoClass(ClientItemClassificationLevelsDao.class);
        registerDaoClass(ClientItemClassificationsDao.class);
        registerDaoClass(VisitsDao.class);
        registerDaoClass(SuggestedUserLoadDao.class);
        registerDaoClass(PromotionHeadersDao.class);
        registerDaoClass(SurveyAssignmentsDao.class);
        registerDaoClass(SurveyQuestionsDao.class);
        registerDaoClass(SubQuestionAnswersDao.class);
        registerDaoClass(MovementDetailsDao.class);
        registerDaoClass(PromotionAssignmentsDao.class);
        registerDaoClass(VehiclesDao.class);
        registerDaoClass(DeviceTrackingDao.class);
        registerDaoClass(VehiclesStockDao.class);
        registerDaoClass(WareHouseBarcodesDao.class);
        registerDaoClass(TransactionSequencesDao.class);
        registerDaoClass(SurveyAnswersDao.class);
        registerDaoClass(PromotionDetailsDao.class);
        registerDaoClass(QuestionAnswersDao.class);
        registerDaoClass(MovementHeadersDao.class);
        registerDaoClass(SurveyImagesDao.class);
        registerDaoClass(DeviceSerialsDao.class);
        registerDaoClass(SurveysDao.class);
        registerDaoClass(TransactionDetailsDao.class);
        registerDaoClass(ClientUserCollectionDao.class);
        registerDaoClass(CollectionInvoicesDao.class);
        registerDaoClass(TotalClientDuesDao.class);
        registerDaoClass(WarehouseQuantitiesDao.class);
        registerDaoClass(MoneyCategoryDao.class);
        registerDaoClass(CollectionDetailsDao.class);
        registerDaoClass(CollectionImagesDao.class);
        registerDaoClass(ClientDuesDao.class);
        registerDaoClass(CollectionHeadersDao.class);
        registerDaoClass(BrandsDao.class);
        registerDaoClass(ClientAssetsPicturesDao.class);
        registerDaoClass(ShareOfShelfTrackerDao.class);
        registerDaoClass(SOSTrackerHeadersDao.class);
        registerDaoClass(UserVersionsDao.class);
        registerDaoClass(UserSpecialPriceListsDao.class);
        registerDaoClass(ForceSyncJourneysDao.class);
        registerDaoClass(NewSkuListDivisionsDao.class);
        registerDaoClass(SOSTargetAssignmentDao.class);
        registerDaoClass(ClientMouvementStockDao.class);
        registerDaoClass(SOSTrackerDetailsDao.class);
        registerDaoClass(SOSTargetHeadersDao.class);
        registerDaoClass(DuoUsersDao.class);
        registerDaoClass(ClientNewSkuListDao.class);
        registerDaoClass(ObjectivesDao.class);
        registerDaoClass(SOSBrandsDao.class);
        registerDaoClass(SOSCategoryBrandsDao.class);
        registerDaoClass(MSLDivisionsDao.class);
        registerDaoClass(ShareOfShelvesDao.class);
        registerDaoClass(SOSCategoriesDao.class);
        registerDaoClass(SOSTargetDetailsDao.class);
        registerDaoClass(ClientAssetStatusDao.class);
        registerDaoClass(ClientCreditingsDao.class);
        registerDaoClass(TargetAssignmentsDao.class);
        registerDaoClass(ObjectivePrioritiesDao.class);
        registerDaoClass(TargetHeadersDao.class);
        registerDaoClass(TargetDetailsDao.class);
        registerDaoClass(ObjectiveAchievementsDao.class);
        registerDaoClass(TargetAchievementsDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
